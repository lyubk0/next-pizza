import { prisma } from "./prisma-client";
import { hashSync } from "bcrypt";

const ingredients = [
  {
    name: "–°–∏—Ä–Ω–∏–π –±–æ—Ä—Ç–∏–∫",
    price: 179,
    imageUrl: "/ingredients/1.png",
  },
  {
    name: "–°–ª–∏–≤–æ—á–Ω–∞ –º–æ—Ü–∞—Ä–µ–ª–∞",
    price: 79,
    imageUrl: "/ingredients/2.png",
  },
  {
    name: "–°–∏—Ä–∏ —á–µ–¥–¥–µ—Ä —ñ –ø–∞—Ä–º–µ–∑–∞–Ω",
    price: 79,
    imageUrl: "/ingredients/16.png",
  },
  {
    name: "–ì–æ—Å—Ç—Ä–∏–π –ø–µ—Ä–µ—Ü—å —Ö–∞–ª–∞–ø–µ–Ω—å–æ",
    price: 59,
    imageUrl: "/ingredients/3.png",
  },
  {
    name: "–ù—ñ–∂–Ω–µ –∫—É—Ä—á–∞",
    price: 79,
    imageUrl: "/ingredients/14.png",
  },
  {
    name: "–®–∞–º–ø—ñ–Ω—å–π–æ–Ω–∏",
    price: 59,
    imageUrl: "/ingredients/4.png",
  },
  {
    name: "–®–∏–Ω–∫–∞",
    price: 79,
    imageUrl: "/ingredients/13.png",
  },
  {
    name: "–ü—ñ–∫–∞–Ω—Ç–Ω–∞ –ø–µ–ø–ø–µ—Ä–æ–Ω—ñ",
    price: 79,
    imageUrl: "/ingredients/12.png",
  },
  {
    name: "–ì–æ—Å—Ç—Ä–∞ —á–æ—Ä—ñ–∑–æ",
    price: 79,
    imageUrl: "/ingredients/8.png",
  },
  {
    name: "–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω—ñ –æ–≥—ñ—Ä–∫–∏",
    price: 59,
    imageUrl: "/ingredients/17.png",
  },
  {
    name: "–°–≤—ñ–∂—ñ –ø–æ–º—ñ–¥–æ—Ä–∏",
    price: 59,
    imageUrl: "/ingredients/18.png",
  },
  {
    name: "–ß–µ—Ä–≤–æ–Ω–∞ —Ü–∏–±—É–ª—è",
    price: 59,
    imageUrl: "/ingredients/19.png",
  },
  {
    name: "–°–æ–∫–æ–≤–∏—Ç—ñ –∞–Ω–∞–Ω–∞—Å–∏",
    price: 59,
    imageUrl: "/ingredients/20.png",
  },
  {
    name: "–Ü—Ç–∞–ª—ñ–π—Å—å–∫—ñ —Ç—Ä–∞–≤–∏",
    price: 39,
    imageUrl: "/ingredients/21.png",
  },
  {
    name: "–°–æ–ª–æ–¥–∫–∏–π –ø–µ—Ä–µ—Ü—å",
    price: 59,
    imageUrl: "/ingredients/22.png",
  },
  {
    name: "–ö—É–±–∏–∫–∏ –±—Ä–∏–Ω–∑–∏",
    price: 79,
    imageUrl: "/ingredients/23.png",
  },
  {
    name: "–ú—ñ—Ç–±–æ–ª–∏",
    price: 79,
    imageUrl: "/ingredients/24.png",
  },
].map((obj, index) => ({ id: index + 1, ...obj }));

const products = [
  {
    name: "–û–º–ª–µ—Ç –∑ –≤–µ—Ç—á–∏–Ω–æ—é —Ç–∞ –≥—Ä–∏–±–∞–º–∏",
    description:
      "–ì–∞—Ä—è—á–∏–π —Å–∏—Ç–Ω–∏–π –æ–º–ª–µ—Ç –∑ –ø—ñ–¥–∂–∞—Ä–∏—Å—Ç–æ—é —Å–∫–æ—Ä–∏–Ω–∫–æ—é, –≤–µ—Ç—á–∏–Ω–∞, —à–∞–º–ø—ñ–Ω—å–π–æ–Ω–∏ —Ç–∞ –º–æ—Ü–∞—Ä–µ–ª–∞",
    imageUrl: "/products/omlet-with-ham-and-mashroom.png",
    categoryId: 2,
    price: 99,
  },
  {
    name: "–û–º–ª–µ—Ç –∑ –±–µ–∫–æ–Ω–æ–º",
    description:
      "–°–∏—Ç–Ω–∏–π —ñ –∑–±–∞–ª–∞–Ω—Å–æ–≤–∞–Ω–∏–π —Å–Ω—ñ–¥–∞–Ω–æ–∫ ‚Äî –æ–º–ª–µ—Ç –∑ –ø—ñ–¥–∂–∞—Ä–∏—Å—Ç–æ—é —Å–∫–æ—Ä–∏–Ω–∫–æ—é, –ø—ñ–∫–∞–Ω—Ç–Ω–∞ –ø–µ–ø–ø–µ—Ä–æ–Ω—ñ, –ø–æ–º—ñ–¥–æ—Ä–∏ —Ç–∞ –º–æ—Ü–∞—Ä–µ–ª–∞",
    imageUrl: "/products/omlet-with-beacon.png",
    categoryId: 2,
    price: 99,
  },
  {
    name: "–°–∏—Ä–Ω–∏–∫–∏ –∑—ñ –∑–≥—É—â–µ–Ω–∏–º –º–æ–ª–æ–∫–æ–º",
    description:
      "–ù—ñ–∂–Ω—ñ —Å–∏—Ä–Ω–∏–∫–∏, –ø—Ä–∏–≥–æ—Ç–æ–≤–∞–Ω—ñ –≤ –ø–µ—á—ñ, –∑ –ø–æ—Ä—Ü—ñ–π–Ω–∏–º –∑–≥—É—â–µ–Ω–∏–º –º–æ–ª–æ–∫–æ–º",
    imageUrl: "/products/cheesecakes.png",
    categoryId: 2,
    price: 100,
  },
  {
    name: "–ö–∞–≤–∞ –õ–∞—Ç—Ç–µ",
    description:
      "–ö–æ–ª–∏ —Ö–æ—á–µ—Ç—å—Å—è –Ω—ñ–∂–Ω–æ—ó –º–æ–ª–æ—á–Ω–æ—ó –ø—ñ–Ω–∏, –Ω–∞ –¥–æ–ø–æ–º–æ–≥—É –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –∫–ª–∞—Å–∏—á–Ω–µ –ª–∞—Ç—Ç–µ",
    imageUrl: "/products/coffe-latte.png",
    categoryId: 2,
    price: 40,
  },
  {
    name: "–ö–∞–≤–∞ –ö–∞–ø—É—á–∏–Ω–æ",
    description:
      "–ö–æ—Ä–æ–ª—å —Å–µ—Ä–µ–¥ –∫–∞–≤–æ–≤–∏—Ö –Ω–∞–ø–æ—ó–≤ ‚Äî –∫–ª–∞—Å–∏—á–Ω–µ –∫–∞–ø—É—á–∏–Ω–æ. –î–ª—è –ª—é–±–∏—Ç–µ–ª—ñ–≤ –∑–±–∞–ª–∞–Ω—Å–æ–≤–∞–Ω–æ–≥–æ –∫–∞–≤–æ–≤–æ-–º–æ–ª–æ—á–Ω–æ–≥–æ —Å–º–∞–∫—É",
    imageUrl: "/products/coffe-cappuccino.png",
    categoryId: 2,
    price: 40,
  },
  {
    name: "–ö–∞–≤–∞ –ê–º–µ—Ä–∏–∫–∞–Ω–æ",
    description:
      "–ü–∞—Ä–∞ –∫–æ–≤—Ç–∫—ñ–≤ –≥–∞—Ä—è—á–æ–≥–æ –ê–º–µ—Ä–∏–∫–∞–Ω–æ, —ñ –≤–∏ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ñ –ø–æ–∫–æ—Ä—è—Ç–∏ —Ü–µ–π –¥–µ–Ω—å",
    imageUrl: "/products/coffe-americano.png",
    categoryId: 2,
    price: 40,
  },
  {
    name: "–ö—É—Ä—è—á—ñ –Ω–∞–≥–µ—Ç—Å–∏",
    description: "–ù—ñ–∂–Ω–µ –∫—É—Ä—è—á–µ –º'—è—Å–æ –≤ —Ö—Ä—É—Å—Ç–∫—ñ–π –ø–∞–Ω—ñ—Ä–æ–≤—Ü—ñ",
    imageUrl: "/products/chicken-nuggets.png",
    categoryId: 3,
    price: 139,
  },
  {
    name: "–ö–∞—Ä—Ç–æ–ø–ª—è –∑ –ø–µ—á—ñ –∑ —Å–æ—É—Å–æ–º üå±",
    description:
      "–ó–∞–ø–µ—á–µ–Ω–∞ –≤ –ø–µ—á—ñ –∫–∞—Ä—Ç–æ–ø–ª—è –∑ –ø—Ä—è–Ω–∏–º–∏ —Å–ø–µ—Ü—ñ—è–º–∏. –í –∫–æ–º–ø–ª–µ–∫—Ç—ñ —Å–∏—Ä–Ω–∏–π —Å–æ—É—Å",
    imageUrl: "/products/kartofel-s-sousom.png",
    categoryId: 3,
    price: 169,
  },
  {
    name: "–ö–∞—Ä—Ç–æ–ø–ª—è –∑ –ø–µ—á—ñ üå±üë∂",
    description:
      "–ó–∞–ø–µ—á–µ–Ω–∞ –≤ –ø–µ—á—ñ –∫–∞—Ä—Ç–æ–ø–ª—è ‚Äî –∑–≤–∏—á–Ω–∏–π —Å–º–∞–∫ —ñ –º–∞–ª–æ –º–∞—Å–ª–∞. –í —Å–∫–ª–∞–¥—ñ –ø—Ä—è–Ω—ñ —Å–ø–µ—Ü—ñ—ó",
    imageUrl: "/products/kartofel.png",
    categoryId: 3,
    price: 139,
  },
  {
    name: "–ö—É—Ä—è—á—ñ –∫—Ä–∏–ª—å—Ü—è –±–∞—Ä–±–µ–∫—é",
    description: "–ö—É—Ä—è—á—ñ –∫—Ä–∏–ª—å—Ü—è –∑—ñ —Å–ø–µ—Ü—ñ—è–º–∏ —Ç–∞ –∞—Ä–æ–º–∞—Ç–æ–º –∫–æ–ø—á–µ–Ω–Ω—è",
    imageUrl: "/products/chiken-bbq.png",
    categoryId: 3,
    price: 210,
  },
  {
    name: "–ö–æ–∫–∞-–ö–æ–ª–∞",
    imageUrl: "/products/coca-cola.png",
    categoryId: 4,
    price: 49,
  },
  {
    name: "–°–ø—Ä–∞–π—Ç",
    imageUrl: "/products/sprite.png",
    categoryId: 4,
    price: 49,
  },
  {
    name: "–§–∞–Ω—Ç–∞",
    imageUrl: "/products/fanta.png",
    categoryId: 4,
    price: 49,
  },
  {
    name: "–ñ–∏–≤—á–∏–∫",
    imageUrl: "/products/zivchik.png",
    categoryId: 4,
    price: 49,
  },
];
async function up() {
  await prisma.user.createMany({
    data: [
      {
        fullName: "John Doe",
        email: "Hs5Qb@example.com",
        password: hashSync("123456", 10),
        verified: new Date(),
        role: "USER",
      },
      {
        fullName: "Admin",
        email: "admin@ad.com",
        password: hashSync("123456", 10),
        verified: new Date(),
        role: "ADMIN",
      },
    ],
  });

  await prisma.category.createMany({
    data: [
      { name: "–ü—ñ—Ü—Ü–∏" },
      { name: "–°–Ω—ñ–¥–∞–Ω–æ–∫" },
      { name: "–ó–∞–∫—É—Å–∫–∏" },
      { name: "–ù–∞–ø–æ—ó" },
    ],
  });

  await prisma.ingredient.createMany({
    data: ingredients,
  });

  await prisma.product.createMany({
    data: products,
  });

  const pizza1 = await prisma.product.create({
    data: {
      name: "–ü–µ–ø–µ—Ä–æ–Ω—ñ —Ñ—Ä–µ—à",
      imageUrl: "/pizzas/pepperoni-fresh.png",
      categoryId: 1,
      ingredients: {
        connect: ingredients.slice(0, 5),
      },
      price: 100,
    },
  });

  const pizza2 = await prisma.product.create({
    data: {
      name: "–°–∏—Ä–Ω–∞",
      imageUrl: "/pizzas/cheese.png",
      categoryId: 1,
      ingredients: {
        connect: ingredients.slice(5, 18),
      },
      price: 100,
    },
  });

  const pizza3 = await prisma.product.create({
    data: {
      name: "–ß–æ—Ä—ñ–∑–æ —Ñ—Ä–µ—à",
      imageUrl: "/pizzas/chorizo-fresh.png",
      categoryId: 1,
      ingredients: {
        connect: ingredients.slice(0, 10),
      },
      price: 100,
    },
  });

  const pizza4 = await prisma.product.create({
    data: {
      name: "–î–≤—ñ–π–Ω–µ –∫—É—Ä—á–∞ üë∂",
      imageUrl: "/pizzas/double-chiken.png",
      categoryId: 1,
      ingredients: {
        connect: ingredients.slice(0, 10),
      },
      price: 100,
    },
  });

  const pizza5 = await prisma.product.create({
    data: {
      name: "–®–∏–Ω–∫–∞ —Ç–∞ —Å–∏—Ä",
      imageUrl: "/pizzas/ham-and-cheese.png",
      categoryId: 1,
      ingredients: {
        connect: ingredients.slice(5, 15),
      },
      price: 100,
    },
  });

  const pizza6 = await prisma.product.create({
    data: {
      name: "–î—ñ–∞–±–ª–æ üå∂Ô∏èüå∂Ô∏è",
      imageUrl: "/pizzas/diablo.png",
      categoryId: 1,
      ingredients: {
        connect: ingredients.slice(7, 17),
      },
      price: 100,
    },
  });

  const pizza7 = await prisma.product.create({
    data: {
      name: "–ß–æ—Ç–∏—Ä–∏ —Å–µ–∑–æ–Ω–∏",
      imageUrl: "/pizzas/four-seasons.png",
      categoryId: 1,
      ingredients: {
        connect: ingredients.slice(0, 8),
      },
      price: 100,
    },
  });

  const pizza8 = await prisma.product.create({
    data: {
      name: "–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞ üå±",
      imageUrl: "/pizzas/margarita.png",
      categoryId: 1,
      ingredients: {
        connect: ingredients.slice(0, 8),
      },
      price: 100,
    },
  });

  const pizza9 = await prisma.product.create({
    data: {
      name: "–ö—É—Ä—á–∞ –±–∞—Ä–±–µ–∫—é",
      imageUrl: "/pizzas/chicken-bbq.png",
      categoryId: 1,
      ingredients: {
        connect: ingredients.slice(10, 18),
      },
      price: 100,
    },
  });

  await prisma.variation.createMany({
    data: [
      // Pepperoni
      {
        productId: pizza1.id,
        size: 25,
        pizzaType: 1,
        price: 220,
      },

      {
        productId: pizza1.id,
        size: 30,
        pizzaType: 2,
        price: 240,
      },

      {
        productId: pizza1.id,
        size: 40,
        pizzaType: 2,
        price: 260,
      },

      // Cheese

      {
        productId: pizza2.id,
        size: 25,
        pizzaType: 1,
        price: 120,
      },
      {
        productId: pizza2.id,
        size: 30,
        pizzaType: 1,
        price: 150,
      },
      {
        productId: pizza2.id,
        size: 40,
        pizzaType: 1,
        price: 180,
      },

      {
        productId: pizza2.id,
        size: 25,
        pizzaType: 2,
        price: 120,
      },
      {
        productId: pizza2.id,
        size: 30,
        pizzaType: 2,
        price: 180,
      },

      {
        productId: pizza2.id,
        size: 40,
        pizzaType: 2,
        price: 160,
      },

      // Chorizo

      {
        productId: pizza3.id,
        size: 30,
        pizzaType: 1,
        price: 220,
      },
      {
        productId: pizza3.id,
        size: 40,
        pizzaType: 1,
        price: 240,
      },

      {
        productId: pizza3.id,
        size: 25,
        pizzaType: 2,
        price: 250,
      },
      {
        productId: pizza3.id,
        size: 30,
        pizzaType: 2,
        price: 280,
      },

      {
        productId: pizza3.id,
        size: 40,
        pizzaType: 2,
        price: 300,
      },

      // Double chiken
      {
        productId: pizza4.id,
        size: 30,
        pizzaType: 1,
        price: 220,
      },
      {
        productId: pizza4.id,
        size: 40,
        pizzaType: 1,
        price: 240,
      },

      {
        productId: pizza4.id,
        size: 25,
        pizzaType: 2,
        price: 250,
      },
      {
        productId: pizza4.id,
        size: 30,
        pizzaType: 2,
        price: 275,
      },

      {
        productId: pizza4.id,
        size: 40,
        pizzaType: 2,
        price: 280,
      },

      // Ham and cheese
      {
        productId: pizza5.id,
        size: 30,
        pizzaType: 1,
        price: 300,
      },
      {
        productId: pizza5.id,
        size: 40,
        pizzaType: 1,
        price: 320,
      },

      {
        productId: pizza6.id,
        size: 25,
        pizzaType: 1,
        price: 150,
      },
      {
        productId: pizza6.id,
        size: 30,
        pizzaType: 1,
        price: 180,
      },
      {
        productId: pizza6.id,
        size: 40,
        pizzaType: 1,
        price: 210,
      },
      {
        productId: pizza6.id,
        size: 25,
        pizzaType: 2,
        price: 160,
      },
      {
        productId: pizza6.id,
        size: 30,
        pizzaType: 2,
        price: 190,
      },
      {
        productId: pizza6.id,
        size: 40,
        pizzaType: 2,
        price: 220,
      },

      // BBQ Chicken
      {
        productId: pizza7.id,
        size: 30,
        pizzaType: 1,
        price: 250,
      },
      {
        productId: pizza7.id,
        size: 40,
        pizzaType: 1,
        price: 270,
      },
      {
        productId: pizza7.id,
        size: 25,
        pizzaType: 2,
        price: 270,
      },
      {
        productId: pizza7.id,
        size: 30,
        pizzaType: 2,
        price: 300,
      },
      {
        productId: pizza7.id,
        size: 40,
        pizzaType: 2,
        price: 330,
      },

      // Veggie Supreme
      {
        productId: pizza8.id,
        size: 25,
        pizzaType: 1,
        price: 180,
      },
      {
        productId: pizza8.id,
        size: 30,
        pizzaType: 1,
        price: 210,
      },
      {
        productId: pizza8.id,
        size: 40,
        pizzaType: 1,
        price: 240,
      },
      {
        productId: pizza8.id,
        size: 25,
        pizzaType: 2,
        price: 190,
      },
      {
        productId: pizza8.id,
        size: 30,
        pizzaType: 2,
        price: 220,
      },
      {
        productId: pizza8.id,
        size: 40,
        pizzaType: 2,
        price: 250,
      },

      // Four Cheese
      {
        productId: pizza9.id,
        size: 30,
        pizzaType: 1,
        price: 280,
      },
      {
        productId: pizza9.id,
        size: 40,
        pizzaType: 1,
        price: 310,
      },
      {
        productId: pizza9.id,
        size: 25,
        pizzaType: 2,
        price: 290,
      },
      {
        productId: pizza9.id,
        size: 30,
        pizzaType: 2,
        price: 320,
      },
      {
        productId: pizza9.id,
        size: 40,
        pizzaType: 2,
        price: 350,
      },

      // –Ü–Ω—à—ñ –ø—Ä–æ–¥—É–∫—Ç–∏

      // –°–Ω—ñ–¥–∞–Ω–æ–∫
      { productId: 1, price: 129 },
      { productId: 2, price: 100 },
      { productId: 3, price: 100 },
      { productId: 4, price: 40 },
      { productId: 5, price: 40 },
      { productId: 6, price: 40 },
      { productId: 7, price: 210 },
      { productId: 8, price: 169 },
      { productId: 9, price: 139 },
      { productId: 10, price: 169 },

      { productId: 11, price: 49 },
      { productId: 12, price: 49 },
      { productId: 13, price: 49 },
      { productId: 14, price: 49 },
    ],
  });
}

async function down() {
  await prisma.$executeRaw`TRUNCATE TABLE "User" RESTART IDENTITY CASCADE`;
  await prisma.$executeRaw`TRUNCATE TABLE "Category" RESTART IDENTITY CASCADE`;
  await prisma.$executeRaw`TRUNCATE TABLE "Cart" RESTART IDENTITY CASCADE`;
  await prisma.$executeRaw`TRUNCATE TABLE "CartItem" RESTART IDENTITY CASCADE`;
  await prisma.$executeRaw`TRUNCATE TABLE "Product" RESTART IDENTITY CASCADE`;
  await prisma.$executeRaw`TRUNCATE TABLE "Ingredient" RESTART IDENTITY CASCADE`;
  await prisma.$executeRaw`TRUNCATE TABLE "Variation" RESTART IDENTITY CASCADE`;
}

async function main() {
  try {
    await down();
    await up();
  } catch (error) {
    console.log(error);
  }
}

main()
  .then(async () => await prisma.$disconnect())
  .catch(async (e) => {
    console.error(e);
    await prisma.$disconnect();
    process.exit(1);
  });
